name: Deploy to production

on:
  push:
    branches: [ production ]

# 2
env:
  REGISTRY: "registry.digitalocean.com/tulanh"
  IMAGE_NAME: "service-api"

# 3
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./service
    steps:
      - name: Checkout the repo 
        uses: actions/checkout@v2

      - name: 'Create env file'
        run: |
          touch .env
          echo DB_SOURCE=${{ secrets.DB_SOURCE }} >> app.env
          echo HTTP_SERVER_ADDRESS=${{ secrets.HTTP_SERVER_ADDRESS }} >> app.env
          echo TOKEN_SYMMETRIC_KEY=${{ secrets.TOKEN_SYMMETRIC_KEY }} >> app.env
          echo ACCESS_TOKEN_DURATION=${{ secrets.ACCESS_TOKEN_DURATION }} >> app.env
          cat app.env

      - name: Build container image
        run: docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) .

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
    
      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600
      
      - name: Remove all old images
        run: if [ ! -z "$(doctl registry repository list | grep "$(echo $IMAGE_NAME)")" ]; then doctl registry repository delete-manifest $(echo $IMAGE_NAME) $(doctl registry repository list-tags $(echo $IMAGE_NAME) | grep -o "sha.*") --force; else echo "No repository"; fi

      - name: Push image to DigitalOcean Container Registry
        run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)
      